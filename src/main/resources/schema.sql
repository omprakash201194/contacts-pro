drop table if exists additional_field CASCADE;
drop table if exists contact CASCADE;
drop table if exists contact_group_mapping CASCADE;
drop table if exists contact_hobby_mapping CASCADE;
drop table if exists contact_organization_mapping CASCADE;
drop table if exists contact_additional_fields CASCADE;
drop table if exists contact_address CASCADE;
drop table if exists contact_email CASCADE;
drop table if exists contact_phone CASCADE;
drop table if exists contact_website CASCADE;
drop table if exists groups CASCADE;
drop table if exists hobby CASCADE;
drop table if exists occupation CASCADE;
drop table if exists organization CASCADE;
drop table if exists social_media_profiles CASCADE;

-- SEQUENCES
drop sequence if exists hibernate_sequence;
create sequence hibernate_sequence start with 1 increment by 1;

--CREATE TABLES
create table additional_field (id bigint not null, created_date date, last_modified_date date, uuid binary, is_custom boolean not null, primary key (id));
create table contact (id bigint generated by default as identity, created_date date, last_modified_date date, uuid binary, date_of_birth date, first_name varchar(255), gender integer, initials varchar(255), is_favorite boolean, last_name varchar(255), location varchar(255), maiden_name varchar(255), middle_name varchar(255), name_prefix varchar(255), name_suffix varchar(255), notes varchar(255), preferred_language integer, short_name varchar(255), occupation_id bigint, primary key (id));
create table contact_group_mapping (contact_id bigint not null, group_id bigint not null, primary key (contact_id, group_id));
create table contact_hobby_mapping (contact_id bigint not null, hobby_id bigint not null, primary key (contact_id, hobby_id));
create table contact_organization_mapping (contact_id bigint not null, organization_id bigint not null, primary key (contact_id, organization_id));
create table contact_additional_fields (id bigint not null, created_date date, last_modified_date date, uuid binary, field_value varchar(255), additional_field_id bigint not null, contact_id bigint not null, primary key (id));
create table contact_address (id bigint not null, created_date date, last_modified_date date, uuid binary, city varchar(255), country varchar(255), district varchar(255), is_default boolean not null, line1 varchar(255), line2 varchar(255), line3 varchar(255), postal varchar(255), state varchar(255), contact_id bigint not null, primary key (id));
create table contact_email (id bigint not null, created_date date, last_modified_date date, uuid binary, email varchar(255), is_default boolean not null, type integer, contact_id bigint not null, primary key (id));
create table contact_phone (id bigint not null, created_date date, last_modified_date date, uuid binary, country_code varchar(255), is_default boolean not null, number varchar(255), type integer, contact_id bigint not null, primary key (id));
create table contact_website (id bigint not null, created_date date, last_modified_date date, uuid binary, is_default boolean not null, type integer, url varchar(255), contact_id bigint not null, primary key (id));
create table groups (id bigint not null, created_date date, last_modified_date date, uuid binary, is_favorite boolean not null, name varchar(255), primary key (id));
create table hobby (id bigint not null, created_date date, last_modified_date date, uuid binary, is_favorite boolean not null, name varchar(255), type integer, primary key (id));
create table occupation (id bigint not null, created_date date, last_modified_date date, uuid binary, profession varchar(255), specialization varchar(255), type integer, primary key (id));
create table organization (id bigint not null, created_date date, last_modified_date date, uuid binary, is_current boolean not null, name varchar(255), sector integer, primary key (id));
create table social_media_profiles (id bigint not null, created_date date, last_modified_date date, uuid binary, platform integer, profile_id varchar(255), url varchar(255), contact_id bigint not null, primary key (id));

--CONSTRAINTS
alter table contact add constraint FK_CONTACT_OCC_01 foreign key (occupation_id) references occupation;
alter table contact_group_mapping add constraint FK_CON_GRP_01 foreign key (group_id) references groups;
alter table contact_group_mapping add constraint FK_CON_GRP_02 foreign key (contact_id) references contact;
alter table contact_hobby_mapping add constraint FK_CON_HOBBY_01 foreign key (hobby_id) references hobby;
alter table contact_hobby_mapping add constraint FK_CON_HOBBY_02 foreign key (contact_id) references contact;
alter table contact_organization_mapping add constraint FK_CON_ORG_01 foreign key (organization_id) references organization;
alter table contact_organization_mapping add constraint FK_CON_ORG_02 foreign key (contact_id) references contact;
alter table contact_additional_fields add constraint FK_CON_ADD_01 foreign key (additional_field_id) references additional_field;
alter table contact_additional_fields add constraint FK_CON_ADD_02 foreign key (contact_id) references contact;
alter table contact_address add constraint FK_CON_ADDRESS_01 foreign key (contact_id) references contact;
alter table contact_email add constraint FK_CON_EMAIL_01 foreign key (contact_id) references contact;
alter table contact_phone add constraint FK_CON_PHONE_01 foreign key (contact_id) references contact;
alter table contact_website add constraint FK_CON_WEBSITE_01 foreign key (contact_id) references contact;
alter table social_media_profiles add constraint FK_SOCIAL_01 foreign key (contact_id) references contact;